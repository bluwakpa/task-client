[{"/Users/bluwakpa/workspace/react-boilerplate/src/index.js":"1","/Users/bluwakpa/workspace/react-boilerplate/src/App.js":"2","/Users/bluwakpa/workspace/task-client/src/index.js":"3","/Users/bluwakpa/workspace/task-client/src/App.js":"4","/Users/bluwakpa/workspace/task-client/src/Task.js":"5","/Users/bluwakpa/workspace/task-client/src/data.js":"6","/Users/bluwakpa/workspace/task-client/src/ApiContext.js":"7","/Users/bluwakpa/workspace/task-client/src/Home.js":"8","/Users/bluwakpa/workspace/task-client/src/TaskCheck.js":"9","/Users/bluwakpa/workspace/task-client/src/config.js":"10"},{"size":167,"mtime":1610247329875,"results":"11","hashOfConfig":"12"},{"size":154,"mtime":1610247306994,"results":"13","hashOfConfig":"12"},{"size":270,"mtime":1623718513180,"results":"14","hashOfConfig":"15"},{"size":2029,"mtime":1624059068626,"results":"16","hashOfConfig":"15"},{"size":2345,"mtime":1624059067285,"results":"17","hashOfConfig":"15"},{"size":1637,"mtime":1623716741817,"results":"18","hashOfConfig":"15"},{"size":191,"mtime":1623716959313,"results":"19","hashOfConfig":"15"},{"size":901,"mtime":1623992133338,"results":"20","hashOfConfig":"15"},{"size":1889,"mtime":1623455779939,"results":"21","hashOfConfig":"15"},{"size":225,"mtime":1622932875004,"results":"22","hashOfConfig":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uuwtdg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c3tofw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/bluwakpa/workspace/react-boilerplate/src/index.js",[],"/Users/bluwakpa/workspace/react-boilerplate/src/App.js",[],"/Users/bluwakpa/workspace/task-client/src/index.js",[],"/Users/bluwakpa/workspace/task-client/src/App.js",["46"],"import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport './index.css';\nimport Task from './Task';\nimport Home from './Home';\nimport ApiContext from './ApiContext';\nimport config from './config';\n\nexport default function App(props) {\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    fetch(`${config.API_ENDPOINT}/api/tasks`)\n      .then(res => {\n        if (!res.ok)\n          return Promise.reject(res)\n        return res.json()\n      })\n      .then((tasks) => {\n        setTasks(tasks)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }, [])\n\n  const handleClickDelete = (e) => {\n    e.preventDefault()\n    const tasks = props.match.params.id\n\n    fetch(`${config.API_ENDPOINT}/api/tasks`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return Promise.reject(e)\n        const newTasks = [...tasks]\n        const indexOfDeleted = tasks.findIndex(task => task.id === tasks)\n        newTasks.splice(indexOfDeleted, 1)\n        this.context.setTasks(newTasks)\n        props.history.push(`/tasks`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  };\n\n  const value = {\n    tasks,\n    setTasks,\n    handleClickDelete\n  }\n\n  return (\n    <ApiContext.Provider value={value}>\n      <div>\n        <nav role=\"navigation\" className=\"nav\">\n          <a className=\"hamburger\" >\n            <i className=\"fa fa-bars\"></i>\n          </a>\n          <Link className=\"logo\" to=\"/\">\n            <h1>Task</h1>\n          </Link>\n        </nav>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/tasks\" component={Task} />\n      </div>\n      <footer role=\"contentinfo\" className=\"footer\">\n        <h3>Task</h3>\n        <div className=\"copyright\">Copyright 2021</div>\n        <br />\n          FAQs<br />\n          Need Help?<br />\n          Contact Us\n      </footer>\n    </ApiContext.Provider>\n  );\n}","/Users/bluwakpa/workspace/task-client/src/Task.js",[],"/Users/bluwakpa/workspace/task-client/src/data.js",[],"/Users/bluwakpa/workspace/task-client/src/ApiContext.js",[],"/Users/bluwakpa/workspace/task-client/src/Home.js",[],"/Users/bluwakpa/workspace/task-client/src/TaskCheck.js",["47"],"import React, { useContext, useState } from 'react';\nimport ApiContext from './ApiContext';\nimport config from './config';\n\nexport default function TaskCheck(props) {\n    const context = useContext(ApiContext)\n    const setTasks = context.setTasks\n    const [checked, setChecked] = useState(false)\n\n    const handleClickDelete = (e) => {\n        e.preventDefault()\n\n        fetch(`${config.API_ENDPOINT}/api/tasks/${props.task.id}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json'\n            },\n        })\n            .then(() => {\n                const filteredDelete = context.tasks.filter(task => task.id !== props.task.id)\n                context.setTasks(filteredDelete)\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    };\n\n    const handleChecked = (e, id) => {\n        setChecked(!checked)\n        const updatedTasks = context.tasks.map(task => {\n            if (task.id === id) {\n                task.complete = e.target.checked\n            }\n            return task\n        })\n        context.setTasks(updatedTasks)\n    }\n\n    return (\n        <div className=\"parent-container\">\n            <input onChange={(e) => handleChecked(e, props.task.id)} value={props.task.complete} checked={props.task.complete} type=\"checkbox\" name=\"check\"\n                className=\"complete\">\n            </input>\n            <label htmlFor=\"check\" className={checked ? 'strike' : 'left'}>{props.task.content}</label>\n            <div className=\"position-right\">\n                <button\n                    className='Delete-button'\n                    type='button'\n                    onClick={handleClickDelete}\n                > <i className=\"fa fa-2x fa-trash\"></i> </button>\n                {/* setStudents to new version of students */}\n            </div>\n        </div>\n    )\n}",["48","49"],"/Users/bluwakpa/workspace/task-client/src/config.js",[],{"ruleId":"50","severity":1,"message":"51","line":62,"column":11,"nodeType":"52","endLine":62,"endColumn":37},{"ruleId":"53","severity":1,"message":"54","line":7,"column":11,"nodeType":"55","messageId":"56","endLine":7,"endColumn":19},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setTasks' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-global-assign","no-unsafe-negation"]