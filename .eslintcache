[{"/Users/bluwakpa/workspace/react-boilerplate/src/index.js":"1","/Users/bluwakpa/workspace/react-boilerplate/src/App.js":"2","/Users/bluwakpa/workspace/task-client/src/index.js":"3","/Users/bluwakpa/workspace/task-client/src/App.js":"4","/Users/bluwakpa/workspace/task-client/src/Task.js":"5","/Users/bluwakpa/workspace/task-client/src/data.js":"6","/Users/bluwakpa/workspace/task-client/src/ApiContext.js":"7","/Users/bluwakpa/workspace/task-client/src/Home.js":"8","/Users/bluwakpa/workspace/task-client/src/TaskCheck.js":"9","/Users/bluwakpa/workspace/task-client/src/config.js":"10"},{"size":167,"mtime":1610247329875,"results":"11","hashOfConfig":"12"},{"size":154,"mtime":1610247306994,"results":"13","hashOfConfig":"12"},{"size":270,"mtime":1620856392794,"results":"14","hashOfConfig":"15"},{"size":2175,"mtime":1622855276280,"results":"16","hashOfConfig":"15"},{"size":2384,"mtime":1622850355672,"results":"17","hashOfConfig":"15"},{"size":1637,"mtime":1620868309315,"results":"18","hashOfConfig":"15"},{"size":191,"mtime":1622071685484,"results":"19","hashOfConfig":"15"},{"size":803,"mtime":1622839449098,"results":"20","hashOfConfig":"15"},{"size":1889,"mtime":1622855510375,"results":"21","hashOfConfig":"15"},{"size":225,"mtime":1622930227394,"results":"22","hashOfConfig":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uuwtdg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"c3tofw",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bluwakpa/workspace/react-boilerplate/src/index.js",[],"/Users/bluwakpa/workspace/react-boilerplate/src/App.js",[],"/Users/bluwakpa/workspace/task-client/src/index.js",[],["46","47"],"/Users/bluwakpa/workspace/task-client/src/App.js",["48"],"import React, { useState, useEffect } from 'react';\nimport data from './data';\nimport { Route, BrowserRouter, Link } from 'react-router-dom';\nimport './index.css';\nimport Task from './Task';\nimport Home from './Home';\nimport ApiContext from './ApiContext';\nimport config from './config';\n\nexport default function App(props) {\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    fetch(`${config.API_ENDPOINT}/api/tasks`)\n      .then(res => {\n        if (!res.ok)\n          return Promise.reject(res)\n        return res.json()\n      })\n      .then((tasks) => {\n        setTasks(tasks)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }, [])\n\n  const handleClickDelete = (e) => {\n    e.preventDefault()\n    const tasks = props.match.params.id\n    console.log('tasks', tasks)\n\n    fetch(`${config.API_ENDPOINT}/api/tasks`, {\n      method: 'DELETE',\n      headers: {\n          'content-type': 'application/json'\n      },\n  })\n      .then(res => {\n          if (!res.ok)\n              return Promise.reject(e)\n          const newTasks = [...tasks]\n          const indexOfDeleted = tasks.findIndex(task => task.id === tasks)\n          newTasks.splice(indexOfDeleted, 1)\n          this.context.setTasks(newTasks)\n          props.history.push(`/tasks`)\n      })\n      .catch(error => {\n          console.error({ error })\n      })\n};\n\n  const value = {\n    tasks,\n    setTasks,\n    handleClickDelete\n  }\n\n  return (\n    <BrowserRouter>\n      <ApiContext.Provider value={value}>\n        <div>\n          <nav role=\"navigation\" className=\"nav\">\n            {/* className=\"hamburger\" */}\n          <i className=\"fa fa-bars\"></i>\n            <Link to=\"/\">\n            <h1 className=\"h1\"> Task</h1></Link>\n          </nav>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/tasks\" component={Task} />\n        </div>\n        <footer role=\"contentinfo\" className=\"footer\">\n        <h1 className=\"h3\">Task</h1>\n        <div className=\"copyright\">Copyright 2021</div>\n          <br />\n          FAQs<br />\n          Need Help?<br />\n          Contact Us\n        </footer>\n      </ApiContext.Provider>\n    </BrowserRouter>\n  );\n}","/Users/bluwakpa/workspace/task-client/src/Task.js",[],"/Users/bluwakpa/workspace/task-client/src/data.js",[],"/Users/bluwakpa/workspace/task-client/src/ApiContext.js",[],"/Users/bluwakpa/workspace/task-client/src/Home.js",[],"/Users/bluwakpa/workspace/task-client/src/TaskCheck.js",["49"],"import React, { useContext, useState } from 'react';\nimport ApiContext from './ApiContext';\nimport config from './config';\n\nexport default function TaskCheck(props) {\n    const context = useContext(ApiContext)\n    const setTasks = context.setTasks\n    const [checked, setChecked] = useState(false)\n\n    const handleClickDelete = (e) => {\n        e.preventDefault()\n\n        fetch(`${config.API_ENDPOINT}/api/tasks/${props.task.id}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json'\n            },\n        })\n            .then(() => {\n                const filteredDelete = context.tasks.filter(task => task.id !== props.task.id)\n                context.setTasks(filteredDelete)\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    };\n\n    const handleChecked = (e, id) => {\n        setChecked(!checked)\n        const updatedTasks = context.tasks.map(task => {\n            if (task.id === id) {\n                task.complete = e.target.checked\n            }\n            return task\n        })\n        context.setTasks(updatedTasks)\n    }\n\n    return (\n        <div className=\"parent-container\">\n            <input onChange={(e) => handleChecked(e, props.task.id)} value={props.task.complete} checked={props.task.complete} type=\"checkbox\" name=\"check\"\n                className=\"complete\">\n            </input>\n            <label htmlFor=\"check\" className={checked ? 'strike' : 'left'}>{props.task.content}</label>\n            <div className=\"position-right\">\n                <button\n                    className='Delete-button'\n                    type='button'\n                    onClick={handleClickDelete}\n                > <i className=\"fa fa-2x fa-trash\"></i> </button>\n                {/* setStudents to new version of students */}\n            </div>\n        </div>\n    )\n}","/Users/bluwakpa/workspace/task-client/src/config.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":7,"column":11,"nodeType":"56","messageId":"57","endLine":7,"endColumn":19},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'setTasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]